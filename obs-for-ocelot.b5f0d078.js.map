{"mappings":"A,M,4C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCKA,AAAA,EAAA,OAAK,CAAE,KAAK,CAAC,MAAO,CAChB,IAAK,cACL,KAAM,CACF,MAAO,GACP,OAAQ,GACR,MAAO,GACP,SAAU,EACV,MAAO,CACX,EACA,OACI,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,SAAS,gBAAgB,CAAC,iBAAiB,OAAO,CAAC,AAAC,IAChD,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAE9B,IAAI,CAAC,GAAG,CAAG,EAAO,EAAE,CACpB,QAAQ,GAAG,CAAC,MAAO,IAAI,CAAC,GAAG,CAC/B,EACJ,EACJ,EACJ,EACA,MACI,IAAM,EAAM,IAAI,gBAAgB,SAAS,QAAQ,CAAC,MAAM,EACxD,GACS,gBADD,IAAI,CAAC,GAAG,EAGR,GAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,MAAO,GAC9B,EAAI,GAAG,CAAC,QAAS,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,GAC1C,EAAI,GAAG,CAAC,SAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAClC,EAAI,GAAG,CAAC,QAAS,IAAI,CAAC,IAAI,CAAC,KAAK,EAChC,EAAI,GAAG,CAAC,WAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EACtC,EAAI,GAAG,CAAC,QAAS,IAAI,CAAC,IAAI,CAAC,KAAK,EAGxC,OAAO,IAAI,IAAI,IAAI,CAAC,GAAG,CAAG,SAAW,EAAI,QAAQ,GAAI,SAAS,QAAQ,CAAC,IAAI,EAAE,QAAQ,EACzF,EACA,OACI,IAAM,EAAW,SAAS,cAAc,CAAC,OACzC,EAAS,MAAM,GACf,EAAS,iBAAiB,CAAC,EAAG,OAE9B,UAAU,SAAS,CAAC,SAAS,CAAC,EAAS,KAAK,CAChD,CACJ,GAEA,AAAA,EAAA,OAAK,CAAE,KAAK","sources":["<anon>","src/index/script.ts"],"sourcesContent":["import \"./advertising.55a09578.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree766\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree766\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $hKdZU = parcelRequire(\"hKdZU\");\n'use strict';\n// noinspection JSUnusedGlobalSymbols\n(0, $hKdZU.default).store('app', {\n    tab: 'advertising',\n    form: {\n        image: '',\n        avatar: '',\n        spawn: 60,\n        duration: 8,\n        debug: 0\n    },\n    init () {\n        document.addEventListener('DOMContentLoaded', ()=>{\n            document.querySelectorAll('#myTab button').forEach((button)=>{\n                button.addEventListener('click', (e)=>{\n                    // @ts-ignore\n                    this.tab = button.id;\n                    console.log('tab', this.tab);\n                });\n            });\n        });\n    },\n    url () {\n        const url = new URLSearchParams(document.location.search);\n        switch(this.tab){\n            case 'advertising':\n                // if (!this.form.image) return ''\n                if (!this.form.avatar) return '';\n                url.set('image', encodeURI(this.form.image));\n                url.set('avatar', this.form.avatar);\n                url.set('spawn', this.form.spawn);\n                url.set('duration', this.form.duration);\n                url.set('debug', this.form.debug);\n                break;\n        }\n        return new URL(this.tab + '.html?' + url.toString(), document.location.href).toString();\n    },\n    copy () {\n        const copyText = document.getElementById(\"url\");\n        copyText.select();\n        copyText.setSelectionRange(0, 99999);\n        // noinspection JSIgnoredPromiseFromCall\n        navigator.clipboard.writeText(copyText.value);\n    }\n});\n(0, $hKdZU.default).start();\n\n\n//# sourceMappingURL=obs-for-ocelot.b5f0d078.js.map\n","'use strict'\n\nimport Alpine from 'alpinejs'\n\n// noinspection JSUnusedGlobalSymbols\nAlpine.store('app', {\n    tab: 'advertising',\n    form: {\n        image: '',\n        avatar: '',\n        spawn: 60,\n        duration: 8,\n        debug: 0,\n    },\n    init(): void {\n        document.addEventListener('DOMContentLoaded', () => {\n            document.querySelectorAll('#myTab button').forEach((button) => {\n                button.addEventListener('click', (e) => {\n                    // @ts-ignore\n                    this.tab = button.id\n                    console.log('tab', this.tab)\n                })\n            })\n        })\n    },\n    url(): string {\n        const url = new URLSearchParams(document.location.search)\n        switch (this.tab) {\n            case 'advertising':\n                // if (!this.form.image) return ''\n                if (!this.form.avatar) return ''\n                url.set('image', encodeURI(this.form.image))\n                url.set('avatar', this.form.avatar)\n                url.set('spawn', this.form.spawn)\n                url.set('duration', this.form.duration)\n                url.set('debug', this.form.debug)\n                break\n        }\n        return new URL(this.tab + '.html?' + url.toString(), document.location.href).toString()\n    },\n    copy(): void {\n        const copyText = document.getElementById(\"url\") as HTMLInputElement\n        copyText.select()\n        copyText.setSelectionRange(0, 99999)\n        // noinspection JSIgnoredPromiseFromCall\n        navigator.clipboard.writeText(copyText.value)\n    },\n})\n\nAlpine.start()\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$hKdZU","default","store","tab","form","image","avatar","spawn","duration","debug","document","addEventListener","querySelectorAll","forEach","button","e","console","log","url","URLSearchParams","location","search","set","encodeURI","URL","toString","href","copy","copyText","getElementById","select","setSelectionRange","navigator","clipboard","writeText","value","start"],"version":3,"file":"obs-for-ocelot.b5f0d078.js.map"}